import re

def repondre_chat(message: str, stories: list) -> str:
    message = message.lower().strip()
    mots_cles = re.findall(r"\w+", message)
    rÃ©ponses = []

    rÃ´les_disponibles = sorted(set(s["acteur"].lower() for s in stories))
    rÃ´le_demandÃ© = next((mot for mot in mots_cles if mot in rÃ´les_disponibles), None)

    if not rÃ´le_demandÃ©:
        exemples = ", ".join(r.capitalize() for r in rÃ´les_disponibles[:3])
        return (
            "ğŸ¤– Je nâ€™ai pas trouvÃ© ce rÃ´le dans les livrables gÃ©nÃ©rÃ©s.\n"
            "Merci de vÃ©rifier que le rÃ´le est bien mentionnÃ© dans la requÃªte initiale.\n"
            f"Exemples de rÃ´les disponibles : {exemples}â€¦"
        )

    bloc = [s for s in stories if s["acteur"].lower() == rÃ´le_demandÃ©]
    for s in bloc:
        rÃ©ponses.append(f"ğŸ§© **{s['story']}**")
        rÃ©ponses.append("âœ… **CritÃ¨res dâ€™acceptation**")
        for c in s["critÃ¨res"]:
            rÃ©ponses.append(f"- {c}")
        rÃ©ponses.append("ğŸ§ª **Tests principaux**")
        for t in s["tests"][:3]:
            rÃ©ponses.append(f"- {t}")
        rÃ©ponses.append("ğŸ’¡ **Suggestion IA**")
        rÃ©ponses.append(f"- {s['suggestions'][0]}")
        rÃ©ponses.append("ğŸ”’ **Validation**")
        rÃ©ponses.append(s["validation"])
        rÃ©ponses.append("")

    return "\n".join(rÃ©ponses)
